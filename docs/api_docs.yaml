openapi: 3.0.2
info:
  title: TCC API
  version: 1.0.0
servers:
  - url: http://localhost:5000
    description: Local Development server
tags:
  - name: Users
    description: All about user account
paths:
  /users:
    post:
      tags:
        - Users
      summary: Register a new user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: User's name.
                email:
                  type: string
                  description: User's email.
                gender:
                  type: string
                  format: string
                  description: User's gender.
              required:
                - name
                - email
                - gender
      responses:
        "201":
          description: Register Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: User Created

    get:
      tags:
        - Users
      summary: Get all users
      responses:
        "200":
          description: Successfully get all users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: 1
                    name:
                      type: string
                      example: bjir
                    email:
                      type: string
                      example: bjir@gmail.com
                    gender:
                      type: string
                      example: Male
                    createdAt:
                      type: string
                      example: 2022-03-29T03:23:37.000Z
                    updatedAt:
                      type: string
                      example: 2022-03-29T03:23:37.000Z
  /user/{id}:
    get:
      tags:
        - Users
      summary: Get all users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfully get all users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: 1
                    name:
                      type: string
                      example: bjir
                    email:
                      type: string
                      example: bjir@gmail.com
                    gender:
                      type: string
                      example: Male
                    createdAt:
                      type: string
                      example: 2022-03-29T03:23:37.000Z
                    updatedAt:
                      type: string
                      example: 2022-03-29T03:23:37.000Z

    patch:
      tags:
        - Users
      summary: Update user by id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: User's name.
                email:
                  type: string
                  description: User's email.
                gender:
                  type: string
                  format: string
                  description: User's gender.
      responses:
        "200":
          description: Update Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: User Updated

    delete:
      tags:
        - Users
      summary: Update user by id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Delete Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: User Deleted
